What happens when you initialize a repository? Why do you need to do it?

Git creates an empty repository and doesn't make any commits. We need to initialize a repository so we can start making commits.


How is the staging area different from the working directory and the repository? What value do you think it offers?

It is different because it still can be changed before you make a commit.


How can you use the staging area to make sure you have one commit per logical change?

Even if you make multiple logical changes in the working directory, you may only add the files that are part of one logical change to the stage area and, thus, only committing them.


What are some situations when branches would be helpful in keeping your history organized? How would branches help?

They are helpful when we have multiple changes to make and they are not really interconnected. Creating branches makes it able to work on them in parallel.


How do the diagrams help you visualize the branch structure?

Diagrams makes us visualize with great ease to which branch each commit belongs to.


What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

All the changes one branch has made merge with the other branch changes. Because that commit now has 2 parents


What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

Automatic merging is easier and doesn't take any time at all. However, manually, you can be sure that all changes are the ones you really want.