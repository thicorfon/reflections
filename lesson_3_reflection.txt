When would you want to use a remote repository rather than keeping all your work local?

When I have to work on different computers, or when I'm working with different people on the same project.


Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

Because sometimes we will need to keep working on an older version.


Describe the differences between forks, clones, and branches. When would you use one instead of another?

Forks and clones are very similar. Both of them "copy" repositories. However, forks can only be used to copy one GitHub repository to your own account, while cloning can be used to copy to you local machine. On the other hand, branches are used to work in parallel, as commits made in different branches are not related.
Forks are used when you want to clone another repository into your own GitHub account. Clones are used when you want to clone a repository into your local machine. Branches are used so that people can work on different tasks without interfering with each other.


What is the benefit of having a copy of the last known state of the remote stored locally?

That way you can work offline and still know what's in the remote.


How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

I'd problably keep sending archives through email or other means. It would be easier because it's not necessary to keep remembering all Git and GitHub details. However, more complex projects and larger archives, it would be very harder to keep sending files via email.


When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

When I'm working on features, and I don't want to make them on master because I don't know if the will work or if I'm going to keep them.